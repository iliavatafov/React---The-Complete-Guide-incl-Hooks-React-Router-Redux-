{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iliya\\\\Desktop\\\\JS\\\\React - The Complete Guide (incl Hooks, React Router, Redux)\\\\react-router-advanced\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n_c = NewEventPage;\nexport const action = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  console.log(data.get(\"title\"));\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","console","log","get","eventData","title","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","json","message","status","$RefreshReg$"],"sources":["C:/Users/iliya/Desktop/JS/React - The Complete Guide (incl Hooks, React Router, Redux)/react-router-advanced/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\r\n\r\nexport const NewEventPage = () => {\r\n  return <EventForm />;\r\n};\r\n\r\nexport const action = async ({ request, params }) => {\r\n  const data = await request.formData();\r\n\r\n  console.log(data.get(\"title\"));\r\n\r\n  const eventData = {\r\n    title: data.get(\"title\"),\r\n    image: data.get(\"image\"),\r\n    date: data.get(\"date\"),\r\n    description: data.get(\"description\"),\r\n  };\r\n\r\n  const response = await fetch(\"http://localhost:8080/events\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(eventData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not save event.\" }, { status: 500 });\r\n  }\r\n};\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACtB,CAAC;AAACC,EAAA,GAFWL,YAAY;AAIzB,OAAO,MAAMM,MAAM,GAAG,MAAAC,IAAA,IAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EAErCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC,CAAC;EAE9B,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEN,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBG,KAAK,EAAEP,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBI,IAAI,EAAER,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBK,WAAW,EAAET,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;AACF,CAAC;AAAC,IAAAzB,EAAA;AAAA0B,YAAA,CAAA1B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}